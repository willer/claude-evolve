# This is the fixed JSON processing logic that should replace the current messy version

# Extract the last valid JSON line and score
last_json=$(echo "$eval_output" | grep '^{.*}$' | tail -1)

if [[ -n "$last_json" ]]; then
  echo "[DEBUG] Found JSON: $last_json"
  
  # Extract score from JSON
  score=$(echo "$last_json" | python3 -c "
import sys, json
try:
    data = json.loads(sys.stdin.read().strip())
    if 'performance' in data:
        print(data['performance'])
    elif 'score' in data:
        print(data['score'])
    else:
        sys.exit(1)
except:
    sys.exit(1)
" 2>/dev/null)

  if [[ -n "$score" ]]; then
    echo "[DEBUG] Extracted score: '$score'"
    
    # Validate score is a clean number
    if [[ "$score" =~ ^[0-9]+\.?[0-9]*$ ]]; then
      # Check if score is 0 and mark as failed
      if [ "$(echo "$score == 0" | bc -l)" = "1" ]; then
        echo "[DEBUG] Updating CSV with JSON data (failed)"
        python3 "${SCRIPT_DIR}/../lib/csv_helper.py" update_with_json "${FULL_CSV_PATH}" "$row_num" "$last_json" "failed"
        echo "[INFO] ✗ Evaluation failed with score 0"
        echo "[INFO] Performance score: $score"
        if should_continue_after_failure; then
          continue 2
        else
          exit 1
        fi
      else
        echo "[DEBUG] Updating CSV with JSON data (complete)"
        python3 "${SCRIPT_DIR}/../lib/csv_helper.py" update_with_json "${FULL_CSV_PATH}" "$row_num" "$last_json" "complete"
        echo "[INFO] ✓ Evaluation completed successfully"
        echo "[INFO] Performance score: $score"
      fi
    else
      echo "[ERROR] Score is not a valid number: '$score'"
      update_csv_row "$row_num" "0" "failed"
      if should_continue_after_failure; then
        continue 2
      else
        exit 1
      fi
    fi
  else
    echo "[ERROR] Could not extract score from JSON"
    update_csv_row "$row_num" "0" "failed"
    if should_continue_after_failure; then
      continue 2
    else
      exit 1
    fi
  fi
else
  echo "[ERROR] No valid JSON found in evaluator output"
  echo "[ERROR] Evaluator must output clean JSON with 'score' or 'performance' field"
  update_csv_row "$row_num" "0" "failed"
  if should_continue_after_failure; then
    continue 2
  else
    exit 1
  fi
fi